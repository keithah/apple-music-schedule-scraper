name: Apple Music Schedule Scraper

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches: [ main ]
    paths:
      - 'scrape_apple_music_schedule.py'
      - 'requirements.txt'
      - '.github/workflows/scrape-schedule.yml'

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Playwright browser
      run: |
        # Check if chromium is already cached
        if [ ! -d ~/.cache/ms-playwright/chromium-* ]; then
          echo "Installing Playwright chromium browser..."
          playwright install chromium --with-deps
        else
          echo "Playwright chromium browser found in cache"
          # Still need to install system deps if not cached
          playwright install-deps chromium
        fi
        
    - name: Run scraper
      run: |
        python scrape_apple_music_schedule.py
        
    - name: Upload schedule data
      uses: actions/upload-artifact@v4
      with:
        name: apple-music-schedule-${{ github.run_number }}
        path: |
          apple_music_schedule.csv
          apple_music_schedule.json
        
    - name: Commit and push if changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add apple_music_schedule.csv apple_music_schedule.json
        if ! git diff --staged --quiet; then
          git commit -m "Update Apple Music schedule data - $(date -u +%Y-%m-%d_%H:%M:%S_UTC)"
          git push
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}